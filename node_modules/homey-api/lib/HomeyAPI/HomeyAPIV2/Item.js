'use strict';

const EventEmitter = require('../../EventEmitter');

class Item extends EventEmitter {

  constructor({
    key,
    homey,
    manager,
    properties,
  }) {
    super();

    // Set Manager
    Object.defineProperty(this, 'homey', {
      value: homey,
      enumerable: false,
      writable: false,
    });

    // Set Manager
    Object.defineProperty(this, 'manager', {
      value: manager,
      enumerable: false,
      writable: false,
    });

    // Set Key
    Object.defineProperty(this, '__key', {
      value: key,
      enumerable: false,
      writable: false,
    });

    // Set Properties
    for (const [key, value] of Object.entries(properties)) {
      Object.defineProperty(this, key, {
        value,
        enumerable: true,
        writable: true,
      });
    }
  }

  __debug(...props) {
    this.manager.__debug(`[${this.constructor.name}:${this.__key}]`, ...props);
  }

  __update(properties) {
    for (const [key, value] of Object.entries(properties)) {
      this[key] = value;
    }
    return this;
  }

  destroy() {
    // Remove all event listeners
    this.removeAllListeners();
  }

}

module.exports = Item;
